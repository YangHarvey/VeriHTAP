SGX_SDK ?= /opt/intel/sgxsdk
SGX_MODE ?= HW
SGX_ARCH ?= x64
SGX_DEBUG ?= 0

PROJECT_ROOT_DIR := $(shell readlink -f ..)
# Enclave_Search_Dirs ?= $(shell \
# 	find $(INFERENCE_RT_DIR)/include -maxdepth 1 -type d -not -path '*/.' -printf '--search-path %p '\
# )

INSTALL ?= install
INSTALL_PREFIX ?= ./install
INSTALL_LIB_DIR = $(INSTALL_PREFIX)/lib
INSTALL_INCLUDE_DIR = $(INSTALL_PREFIX)/include

.PHONY: all install clean mrproper

SRC_DIRS = ./ ./common/ ./untrusted/system/ ./untrusted/benchmarks/ ./untrusted/cache/ ./trusted/system/ ./trusted/concurrency_control/
CPPS = $(foreach dir, $(SRC_DIRS), $(wildcard $(dir)*.cpp))
OBJS = $(CPPS:.cpp=.o)
DEPS = $(CPPS:.cpp=.d)

all:
	$(MAKE) -ef sgx_t.mk all SGX_MODE=$(SGX_MODE) SGX_DEBUG=$(SGX_DEBUG) Enclave_Search_Dirs="$(Enclave_Search_Dirs)"
	$(MAKE) -ef sgx_u.mk all SGX_MODE=$(SGX_MODE) SGX_DEBUG=$(SGX_DEBUG) Enclave_Search_Dirs="$(Enclave_Search_Dirs)"

HEADERS := untrusted/worker.h

install:
	$(INSTALL) -d $(INSTALL_INCLUDE_DIR)
	$(INSTALL) -d $(INSTALL_LIB_DIR)
	# $(INSTALL) -C -m 644 ${HEADERS} $(INSTALL_INCLUDE_DIR)
	# $(INSTALL) -C -m 664 *.signed.so $(INSTALL_LIB_DIR)
	# $(INSTALL) -C -m 644 *.a $(INSTALL_LIB_DIR)

clean:
	$(MAKE) -ef sgx_t.mk clean
	$(MAKE) -ef sgx_u.mk clean
	rm -f App ./trusted/*.o ./trusted/*.d ./trusted/system/*.o ./trusted/system/*.d ./trusted/concurrency_control/*.o trusted/concurrency_control/*.d ./untrusted/*.o ./untrusted/*.d ./untrusted/system/*.o ./untrusted/system/*.d ./untrusted/benchmarks/*.o ./untrusted/benchmarks/*.d ./untrusted/cache/*.o ./untrusted/cache/*.d ./common/*.o ./common/*.d $(OBJS)

mrproper: clean
	rm -rf ./install
