enclave {
  include "stdint.h"
  from "sgx_tstdc.edl" import *; // needed for pthread_mutex

  trusted {
    public void ec_global_init([user_check] void * stats);
    public void ec_index_init(int part_cnt, [user_check] void* table,
      [in, size=len] const char* iname, size_t len, [user_check] void* index_ptr, uint64_t bucket_cnt);
    public void ec_index_load(int part_cnt, [user_check] void* table,
      [in, size=len] const char* iname, size_t len, [user_check] void* index_ptr, uint64_t bucket_cnt);
    public int ec_run_txn([user_check] void* h_thd, uint64_t start_time);
    public void ec_update_hash_value(int part_id, uint64_t bkt_idx, uint64_t hash, uint64_t ts, [in, size=len] const char* iname, size_t len);
  };

  untrusted {
    // return base query
    void* oc_gen_txn([user_check] void* h_thd);
    // uint64_t oc_get_current_time();
    char* oc_get_bucket_ocall([in, size=len] const char* iname, size_t len, int part_id, int bkt_idx);
    void oc_debug_print([in, string] const char* str);
    void oc_async_hash_value([in, size=len] const char* iname, size_t len, int part_id, uint64_t bkt_idx, uint64_t hash, uint64_t ts);
    void oc_send_logs([in, size=len] const char* iname, size_t len, int thd_id);
    void oc_sync_bucket_from_disk([in, size=len] const char* iname, size_t len, int part_id, int thd_id);
  };
};